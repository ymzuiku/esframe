{
  "version": 3,
  "sources": ["../lib/BootMap.ts", "../lib/update.ts", "../lib/ele.ts", "../lib/for.ts", "../lib/show.ts"],
  "sourcesContent": ["export class BootMap<K, V> {\n  weak = new WeakMap();\n  map = new Map();\n  set = (key: K, value: V) => {\n    if (typeof key !== \"object\") {\n      this.map.set(key, value);\n    } else {\n      this.weak.set(key as object, value);\n    }\n  };\n  get = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.get(key);\n    }\n    return this.weak.get(key as object);\n  };\n  has = (key: K) => {\n    if (typeof key !== \"object\") {\n      this.map.has(key);\n    } else {\n      this.weak.has(key as object);\n    }\n  };\n  delete = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.delete(key);\n    } else {\n      this.weak.delete(key as object);\n    }\n  };\n}\n", "import { BootMap } from \"./BootMap\";\n\nfunction isSvg(ele: any) {\n  if (ele.tagName === \"svg\" || ele.ownerSVGElement) {\n    return true;\n  }\n  return false;\n}\n\nexport const attributeKeys: { [key: string]: boolean } = {\n  autofocus: true,\n  role: true,\n  viewBox: true,\n  disabled: true,\n  class: true,\n};\n\nconst setAttributeKeys: Record<string, boolean> = {};\n\nexport function setAttr(ele: any, key: string | number | symbol, value: any) {\n  if (Array.isArray(value)) {\n    ele[key](...value);\n    return;\n  }\n  if (typeof value === \"object\") {\n    Object.assign(ele[key], value);\n    return;\n  }\n  if (!ele.__lastAttr) {\n    ele.__lastAttr = {};\n  }\n  if (ele.__lastAttr[key] === value) {\n    return;\n  }\n  ele.__lastAttr[key] = value;\n  if (\n    ele.setAttribute &&\n    (setAttributeKeys[key as string] ||\n      attributeKeys[key as string] ||\n      /-/.test(key as string) ||\n      isSvg(ele))\n  ) {\n    setAttributeKeys[key as string] = true;\n    if (value === undefined || value === null) {\n      ele.removeAttribute(key);\n    } else {\n      ele.setAttribute(key as string, value);\n    }\n    return;\n  }\n\n  ele[key] = value;\n}\n\n// eslint-disable-next-line\nexport function bindSubscrib(\n  ele: Node,\n  key: any,\n  fn: any,\n  ignoreAutoRun?: boolean\n) {\n  // @ts-ignore\n  ele.setAttribute!(\"data-x-subscrib\", \"\");\n  // @ts-ignore\n  if (!ele.__x_subscrib) {\n    // @ts-ignore\n    ele.__x_subscrib = {};\n  }\n  // @ts-ignore\n  ele.__x_subscrib[key] = fn;\n\n  if (!ignoreAutoRun) {\n    if (/^(__update)/.test(key as string)) {\n      fn(ele, key);\n      return;\n    }\n    // @ts-ignore\n    Promise.resolve(fn(ele, key)).then((value) => {\n      setAttr(ele, key, value);\n    });\n  }\n}\n\n// eslint-disable-next-line\nconst nextElements = new Set<Element & { __x_subscrib: Record<string, any> }>();\n\nlet nowId = \"\";\nconst updateNextElements = (id: string) => {\n  if (nowId !== id) {\n    return;\n  }\n  nextElements.forEach((e) => {\n    if (nowId !== id) {\n      return;\n    }\n    requestAnimationFrame(() => {\n      if (nowId !== id) {\n        return;\n      }\n      if (e.__x_subscrib) {\n        const keys = Object.keys(e.__x_subscrib);\n        keys.forEach((k) => {\n          if (nowId !== id) {\n            return;\n          }\n          const fn = e.__x_subscrib[k];\n          if (/^(__update)/.test(k as string)) {\n            fn(e, k);\n            return;\n          }\n          Promise.resolve(fn(e, k)).then((value) => {\n            setAttr(e, k, value);\n          });\n        });\n      }\n    });\n    nextElements.delete(e);\n  });\n};\n\n// eslint-disable-next-line\nfunction updateOne(ele: any) {\n  if ((ele as Element).hasAttribute(\"data-x-subscrib\")) {\n    nextElements.add(ele);\n  }\n  const eles = (ele as Element).querySelectorAll(\"[data-x-subscrib]\");\n  // @ts-ignore\n  eles.forEach((e: any) => {\n    nextElements.add(e);\n  });\n}\n\nconst filterEvents = new BootMap<any, number>();\n// eslint-disable-next-line\nlet fullUpdateEvents: any;\n\n// \u5168\u91CF\u66F4\u65B0, \u6240\u6709\u8BA2\u9605\u7684\u5C5E\u6027, \u53EF\u4EE5\u9009\u62E9\u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20, \u5176\u4ED6\u5168\u91CF\u5143\u7D20\u4F1A\u5EF6\u8FDF\u66F4\u65B0\nexport function toUpdate(\n  // \u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20\n  priority:\n    | (Element | Node | string | null)\n    | (Node | Element)[] = document.body,\n  options: {\n    ignoreSupplement?: boolean;\n  } = {}\n) {\n  if (priority !== null) {\n    let id = Math.random().toString();\n    nowId = id;\n    const lastRaf = filterEvents.get(priority) || 0;\n    if (lastRaf) {\n      cancelAnimationFrame(lastRaf);\n    }\n    const nextRef = requestAnimationFrame(() => {\n      if (typeof priority === \"string\") {\n        document.body.querySelectorAll(priority).forEach(updateOne);\n      } else if (Array.isArray(priority)) {\n        priority.forEach(updateOne);\n      } else {\n        updateOne(priority);\n      }\n      updateNextElements(id);\n      filterEvents.delete(priority);\n    });\n    filterEvents.set(priority, nextRef);\n  }\n  if (!options.ignoreSupplement && priority !== document.body) {\n    if (fullUpdateEvents) {\n      clearTimeout(fullUpdateEvents);\n      fullUpdateEvents = null;\n    }\n    fullUpdateEvents = setTimeout(() => {\n      updateOne(document.body);\n      updateNextElements(nowId);\n    }, 250);\n  }\n}\n", "import { setAttr } from \"./update\";\nimport { TreeParams, EleOrTag } from \"./types\";\nimport { bindSubscrib } from \"./update\";\n\n// eslint-disable-next-line\nexport function tagToElement(tag: any): any {\n  // eslint-disable-next-line\n  let ele: any;\n  if (typeof tag === \"string\") {\n    ele = document.createElement(tag);\n  } else {\n    ele = tag;\n  }\n  return ele;\n}\n\nexport function Ele<T>(tag: EleOrTag<T>, params?: TreeParams<T>) {\n  const ele = tagToElement(tag);\n  if (params) {\n    const keys = Object.keys(params) as (keyof typeof ele)[];\n    keys.forEach((k) => {\n      // @ts-ignore\n      const v = params[k];\n      // update props on assignxUpdate\n      if (\n        typeof v === \"function\" &&\n        // @ts-ignore\n        ele.setAttribute &&\n        !/^on/.test(k as string)\n      ) {\n        bindSubscrib(ele, k, v);\n        return;\n      }\n\n      // @ts-ignore\n      setAttr(ele, k, v);\n    });\n  }\n  return ele;\n}\n", "import { Ele } from \"./ele\";\nimport { EleOrTag, TreeParams } from \"./types\";\nimport { bindSubscrib } from \"./update\";\n\nexport function For<T>(\n  tag: EleOrTag<T>,\n  params: Omit<TreeParams<T>, \"each\" | \"render\"> & {\n    each: number | (() => number);\n    render: (index: number, getLength: () => number) => Node;\n  }\n): Node {\n  const { each, render, ...rest } = params;\n  // eslint-disable-next-line\n  const out = Ele(tag, rest as any);\n\n  if (typeof each === \"function\") {\n    bindSubscrib(\n      out,\n      \"__update_for\",\n      (\n        ele: Element & {\n          __lastForRender: boolean;\n        }\n      ) => {\n        const rendered = !!ele.__lastForRender;\n        ele.__lastForRender = true;\n        const nowL = each();\n\n        if (!rendered) {\n          const eles = [];\n          for (let i = 0; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n          return;\n        }\n        const l = ele.childNodes.length;\n        if (nowL > l) {\n          const eles = [];\n          for (let i = l; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n        } else {\n          for (let i = nowL; i < l; i++) {\n            const e = ele.childNodes.item(i);\n            if (e) {\n              e.remove();\n            }\n          }\n        }\n      }\n    );\n  } else {\n    const eles = [];\n    for (let i = 0; i < each; i++) {\n      eles.push(render(i, () => each));\n    }\n    out.append(...eles);\n  }\n\n  return out;\n}\n", "import { bindSubscrib } from \"./update\";\n\nexport function createEmpty() {\n  const span = document.createElement(\"span\");\n  span.style.all = \"none\";\n  return span;\n}\n\nexport function Show(\n  when: boolean | (() => boolean | Promise<boolean>),\n  render: () => Node\n): Node {\n  const base = createEmpty();\n  if (typeof when === \"function\") {\n    const createShowBind = (bindEle: Node) => {\n      bindSubscrib(\n        bindEle,\n        \"__update_show\",\n        (ele: Element & { __lastShow?: boolean }) => {\n          Promise.resolve(when()).then((v) => {\n            if (v === ele.__lastShow) {\n              return;\n            }\n            const nextEle = v ? render() : createEmpty();\n            createShowBind(nextEle);\n            ele.replaceWith(nextEle);\n            ele.__lastShow = v;\n          });\n        },\n        true\n      );\n    };\n    createShowBind(base);\n  }\n  return base;\n}\n"],
  "mappings": "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",
  "names": []
}

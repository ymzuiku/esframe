{
  "version": 3,
  "sources": ["../lib/BootMap.ts", "../lib/update.ts", "../lib/onMount.ts", "../lib/ele.ts", "../lib/for.ts", "../lib/show.ts"],
  "sourcesContent": ["export class BootMap<K, V> {\n  weak = new WeakMap();\n  map = new Map();\n  set = (key: K, value: V) => {\n    if (typeof key !== \"object\") {\n      this.map.set(key, value);\n    } else {\n      this.weak.set(key as object, value);\n    }\n  };\n  get = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.get(key);\n    }\n    return this.weak.get(key as object);\n  };\n  has = (key: K) => {\n    if (typeof key !== \"object\") {\n      this.map.has(key);\n    } else {\n      this.weak.has(key as object);\n    }\n  };\n  delete = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.delete(key);\n    } else {\n      this.weak.delete(key as object);\n    }\n  };\n}\n", "import { BootMap } from \"./BootMap\";\n\nfunction isSvg(ele: any) {\n  if (ele.tagName === \"svg\" || ele.ownerSVGElement) {\n    return true;\n  }\n  return false;\n}\n\nexport const attributeKeys: { [key: string]: boolean } = {\n  autofocus: true,\n  role: true,\n  viewBox: true,\n  disabled: true,\n  class: true,\n};\n\nconst setAttributeKeys: Record<string, boolean> = {};\n\nexport function setAttr(ele: any, key: string | number | symbol, value: any) {\n  if (Array.isArray(value)) {\n    ele[key](...value);\n    return;\n  }\n  if (typeof value === \"object\") {\n    Object.assign(ele[key], value);\n    return;\n  }\n  // \u51CF\u5C11\u4E0D\u5FC5\u8981\u7684 dom \u64CD\u4F5C\n  if (!ele.__lastAttr) {\n    ele.__lastAttr = {};\n  }\n  if (ele.__lastAttr[key] === value) {\n    return;\n  }\n  ele.__lastAttr[key] = value;\n  if (\n    ele.setAttribute &&\n    (setAttributeKeys[key as string] ||\n      attributeKeys[key as string] ||\n      /-/.test(key as string) ||\n      isSvg(ele))\n  ) {\n    setAttributeKeys[key as string] = true;\n    if (value === undefined || value === null) {\n      ele.removeAttribute(key);\n    } else {\n      ele.setAttribute(key as string, value);\n    }\n    return;\n  }\n\n  ele[key] = value;\n}\n\n// eslint-disable-next-line\nexport function bindSubscrib(\n  ele: Node,\n  key: any,\n  fn: any,\n  ignoreAutoRun?: boolean\n) {\n  // @ts-ignore\n  ele.setAttribute!(\"data-x-subscrib\", \"\");\n  // @ts-ignore\n  if (!ele.__x_subscrib) {\n    // @ts-ignore\n    ele.__x_subscrib = {};\n  }\n  // @ts-ignore\n  ele.__x_subscrib[key] = fn;\n\n  if (!ignoreAutoRun) {\n    if (/^(__update)/.test(key as string)) {\n      fn(ele, key);\n      return;\n    }\n    // @ts-ignore\n    Promise.resolve(fn(ele, key)).then((value) => {\n      setAttr(ele, key, value);\n    });\n  }\n}\n\n// eslint-disable-next-line\nconst nextElements = new Set<Element & { __x_subscrib: Record<string, any> }>();\n\nconst updateNextElements = () => {\n  nextElements.forEach((e) => {\n    if (e.__x_subscrib) {\n      const keys = Object.keys(e.__x_subscrib);\n      keys.forEach((k) => {\n        const fn = e.__x_subscrib[k];\n        if (/^(__update)/.test(k as string)) {\n          fn(e, k);\n          return;\n        }\n        Promise.resolve(fn(e, k)).then((value) => {\n          setAttr(e, k, value);\n        });\n      });\n    }\n  });\n  nextElements.clear();\n};\n\n// eslint-disable-next-line\nfunction updateOne(ele: any) {\n  if ((ele as Element).hasAttribute(\"data-x-subscrib\")) {\n    nextElements.add(ele);\n  }\n  const eles = (ele as Element).querySelectorAll(\"[data-x-subscrib]\");\n  // @ts-ignore\n  eles.forEach((e: any) => {\n    nextElements.add(e);\n  });\n}\n\nconst filterEvents = new BootMap<any, number>();\n// eslint-disable-next-line\nlet fullUpdateEvents: any;\nlet lastElementSize = 0;\n\nfunction fixFullTimeout() {\n  if (lastElementSize < 3000) {\n    return 17;\n  }\n  return (lastElementSize / 3000) * 17;\n}\n\n// \u5168\u91CF\u66F4\u65B0, \u6240\u6709\u8BA2\u9605\u7684\u5C5E\u6027, \u53EF\u4EE5\u9009\u62E9\u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20, \u5176\u4ED6\u5168\u91CF\u5143\u7D20\u4F1A\u5EF6\u8FDF\u66F4\u65B0\nexport function toUpdate(\n  // \u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20\n  priority:\n    | (Element | Node | string | null)\n    | (Node | Element)[] = document.body,\n  options: {\n    ignoreSupplement?: boolean;\n  } = {}\n) {\n  if (priority !== null) {\n    const lastRaf = filterEvents.get(priority) || 0;\n    if (lastRaf) {\n      cancelAnimationFrame(lastRaf);\n    }\n    const nextRef = requestAnimationFrame(() => {\n      filterEvents.delete(priority);\n      if (typeof priority === \"string\") {\n        document.body.querySelectorAll(priority).forEach(updateOne);\n      } else if (Array.isArray(priority)) {\n        priority.forEach(updateOne);\n      } else {\n        updateOne(priority);\n      }\n      updateNextElements();\n    });\n    filterEvents.set(priority, nextRef);\n  }\n  if (!options.ignoreSupplement && priority !== document.body) {\n    if (fullUpdateEvents) {\n      return;\n    }\n    fullUpdateEvents = setTimeout(() => {\n      fullUpdateEvents = null;\n      updateOne(document.body);\n      lastElementSize = nextElements.size;\n      updateNextElements();\n    }, fixFullTimeout());\n  }\n}\n", "const observeOption = {\n  childList: true,\n  subtree: true,\n};\n\nconst onMoountWeak = new WeakMap<Element, Function[]>();\nconst onCleanupWeak = new WeakMap<Element, Function[]>();\nconst onEntryWeak = new WeakMap<Element, Function[]>();\n\nexport function onMount<T extends Element>(\n  target: T,\n  callback: (ele: T) => any\n) {\n  if (onMoountWeak.has(target)) {\n    const fns = onMoountWeak.get(target)!;\n    fns.push(callback);\n    return;\n  }\n\n  onMoountWeak.set(target, [callback]);\n\n  const observer = new MutationObserver((_e) => {\n    if (document.contains(target)) {\n      observer.disconnect();\n      const fns = onMoountWeak.get(target);\n      if (fns) {\n        fns.forEach((fn) => fn(target));\n      }\n      onMoountWeak.delete(target);\n    }\n  });\n\n  observer.observe(document, observeOption);\n}\n\nexport function onCleanup<T extends Element>(\n  target: T,\n  callback: (ele: T) => any\n) {\n  if (onCleanupWeak.has(target)) {\n    const fns = onCleanupWeak.get(target)!;\n    fns.push(callback);\n    return;\n  }\n\n  onCleanupWeak.set(target, [callback]);\n\n  // \u5F53\u5143\u7D20\u63D2\u5165\u5230\u9875\u9762\u540E\uFF0C\u624D\u5F00\u59CB\u76D1\u542C\u662F\u5426\u79FB\u9664\n  onMount(target, () => {\n    const observer = new MutationObserver(() => {\n      if (!document.contains(target)) {\n        observer.disconnect();\n        const fns = onCleanupWeak.get(target);\n        if (fns) {\n          fns.forEach((fn) => fn(target));\n        }\n        onCleanupWeak.delete(target);\n      }\n    });\n\n    observer.observe(document, observeOption);\n  });\n}\n\nexport interface LazyEnterOptions {\n  // \u968F\u7740\u67D0\u4E2A\u5143\u7D20\u7684\u6D88\u4EA1\u800C\u53D6\u6D88\u8BA2\u9605\n  minHeight?: string;\n  root?: Element;\n}\n\nexport const onEntry = <T extends Element>(\n  target: T,\n  callback: (target: T, entry: IntersectionObserverEntry) => any,\n  { minHeight = \"50px\", root }: LazyEnterOptions = {}\n) => {\n  if (onEntryWeak.has(target)) {\n    const fns = onEntryWeak.get(target)!;\n    fns.push(callback);\n    return;\n  }\n\n  onEntryWeak.set(target, [callback]);\n\n  onMount(target, () => {\n    // let isNeedRemoveMinHeight = false;\n    if (!(target as any).style.minHeight) {\n      // isNeedRemoveMinHeight = true;\n      (target as any).style.minHeight = minHeight;\n    }\n\n    if (!target.getAttribute(\"data-lazy\")) {\n      target.setAttribute(\"data-lazy\", \"1\");\n      const observer = new IntersectionObserver(\n        (e) => {\n          e.forEach((ent) => {\n            target.setAttribute(\"data-lazy\", \"2\");\n            if (ent.isIntersecting) {\n              observer.disconnect();\n              const fns = onEntryWeak.get(target);\n              if (fns) {\n                fns.forEach((fn) => fn(ent));\n              }\n              onEntryWeak.delete(target);\n            }\n          });\n        },\n        { root, rootMargin: window.innerHeight / 2 + \"px\" }\n      );\n\n      observer.observe(target);\n      onCleanup(target, () => {\n        observer.disconnect();\n      });\n    }\n  });\n};\n", "import { setAttr } from \"./update\";\nimport { TreeParams, EleOrTag } from \"./types\";\nimport { bindSubscrib } from \"./update\";\nimport { onCleanup, onEntry, onMount } from \"./onMount\";\n\n// eslint-disable-next-line\nexport function tagToElement(tag: any): any {\n  // eslint-disable-next-line\n  let ele: any;\n  if (typeof tag === \"string\") {\n    ele = document.createElement(tag);\n  } else {\n    ele = tag;\n  }\n  return ele;\n}\n\nexport function Ele<T>(tag: EleOrTag<T>, params?: TreeParams<T>) {\n  const ele = tagToElement(tag);\n  if (params) {\n    const keys = Object.keys(params) as (keyof typeof ele)[];\n    keys.forEach((k) => {\n      // @ts-ignore\n      const v = params[k];\n      // update props on assignxUpdate\n\n      if (ele.setAttribute) {\n        if (typeof v === \"function\" && !/^on/.test(k as string)) {\n          if (k === \"ref\") {\n            v(ele);\n            return;\n          }\n          bindSubscrib(ele, k, v);\n          return;\n        }\n        if (k === \"onMount\") {\n          onMount(ele as Element, v);\n          return;\n        }\n        if (k === \"onCleanup\") {\n          onCleanup(ele as Element, v);\n          return;\n        }\n        if (k === \"onEntry\") {\n          onEntry(ele as Element, v);\n          return;\n        }\n      }\n\n      // @ts-ignore\n      setAttr(ele, k, v);\n    });\n  }\n  return ele;\n}\n\n(window as any).JSX_ELE = Ele;\n", "import { Ele } from \"./ele\";\nimport { createEmpty } from \"./show\";\nimport { EleOrTag, TreeParams } from \"./types\";\nimport { bindSubscrib } from \"./update\";\n\nexport function For<T>(\n  tag: EleOrTag<T>,\n  params:\n    | TreeParams<T>\n    | {\n        each: number | (() => number);\n        render: (index: number, getLength: () => number) => Node;\n      }\n): Node {\n  // eslint-disable-next-line\n  const { each, render, ...rest } = params as any;\n  const out = Ele(tag, rest);\n\n  if (typeof each === \"function\") {\n    bindSubscrib(\n      out,\n      \"__update_for\",\n      (\n        ele: Element & {\n          __lastForRender: number;\n        }\n      ) => {\n        const lastL = ele.__lastForRender;\n        const nowL = each();\n        ele.__lastForRender = nowL;\n        if (!lastL) {\n          const eles = [];\n          for (let i = 0; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n          return;\n        }\n\n        if (nowL > lastL) {\n          const eles = [];\n          for (let i = lastL; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n        } else {\n          const removes = [];\n          for (let i = nowL; i < lastL; i++) {\n            const e = ele.childNodes.item(i);\n            if (e) {\n              removes.push(e);\n            }\n          }\n          removes.forEach((e) => e.remove());\n        }\n      }\n    );\n  } else {\n    const eles = [];\n    for (let i = 0; i < each; i++) {\n      eles.push(render(i, () => each));\n    }\n    out.append(...eles);\n  }\n\n  return out;\n}\n", "import { bindSubscrib } from \"./update\";\n\nexport function createEmpty() {\n  const span = document.createElement(\"span\");\n  span.style.all = \"none\";\n  return span;\n}\n\nexport function Show({\n  when,\n  render,\n}: {\n  when: boolean | (() => boolean | Promise<boolean>);\n  render: () => Node;\n}): Node {\n  if (!when) {\n    return createEmpty();\n  }\n  const base = createEmpty();\n  if (typeof when === \"function\") {\n    const createShowBind = (bindEle: Node) => {\n      bindSubscrib(\n        bindEle,\n        \"__update_show\",\n        (ele: Element & { __lastShow?: boolean }) => {\n          Promise.resolve(when()).then((v) => {\n            if (v === ele.__lastShow) {\n              return;\n            }\n            const nextEle = v ? render() : createEmpty();\n            createShowBind(nextEle);\n            ele.replaceWith(nextEle);\n            ele.__lastShow = v;\n          });\n        },\n        true\n      );\n    };\n    createShowBind(base);\n  }\n  return base;\n}\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../lib/BootMap.ts", "../lib/update.ts", "../lib/ele.ts", "../lib/for.ts", "../lib/show.ts", "index.ts"],
  "sourcesContent": ["export class BootMap<K, V> {\n  weak = new WeakMap();\n  map = new Map();\n  set = (key: K, value: V) => {\n    if (typeof key !== \"object\") {\n      this.map.set(key, value);\n    } else {\n      this.weak.set(key as object, value);\n    }\n  };\n  get = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.get(key);\n    }\n    return this.weak.get(key as object);\n  };\n  has = (key: K) => {\n    if (typeof key !== \"object\") {\n      this.map.has(key);\n    } else {\n      this.weak.has(key as object);\n    }\n  };\n  delete = (key: K) => {\n    if (typeof key !== \"object\") {\n      return this.map.delete(key);\n    } else {\n      this.weak.delete(key as object);\n    }\n  };\n}\n", "import { BootMap } from \"./BootMap\";\n\nfunction isSvg(ele: any) {\n  if (ele.tagName === \"svg\" || ele.ownerSVGElement) {\n    return true;\n  }\n  return false;\n}\n\nexport const attributeKeys: { [key: string]: boolean } = {\n  autofocus: true,\n  role: true,\n  viewBox: true,\n  disabled: true,\n  class: true,\n};\n\nconst setAttributeKeys: Record<string, boolean> = {};\n\nexport function setAttr(ele: any, key: string | number | symbol, value: any) {\n  if (Array.isArray(value)) {\n    ele[key](...value);\n    return;\n  }\n  if (typeof value === \"object\") {\n    Object.assign(ele[key], value);\n    return;\n  }\n  if (!ele.__lastAttr) {\n    ele.__lastAttr = {};\n  }\n  if (ele.__lastAttr[key] === value) {\n    return;\n  }\n  ele.__lastAttr[key] = value;\n  if (\n    ele.setAttribute &&\n    (setAttributeKeys[key as string] ||\n      attributeKeys[key as string] ||\n      /-/.test(key as string) ||\n      isSvg(ele))\n  ) {\n    setAttributeKeys[key as string] = true;\n    if (value === undefined || value === null) {\n      ele.removeAttribute(key);\n    } else {\n      ele.setAttribute(key as string, value);\n    }\n    return;\n  }\n\n  ele[key] = value;\n}\n\n// eslint-disable-next-line\nexport function bindSubscrib(\n  ele: Node,\n  key: any,\n  fn: any,\n  ignoreAutoRun?: boolean\n) {\n  // @ts-ignore\n  ele.setAttribute!(\"data-x-subscrib\", \"\");\n  // @ts-ignore\n  if (!ele.__x_subscrib) {\n    // @ts-ignore\n    ele.__x_subscrib = {};\n  }\n  // @ts-ignore\n  ele.__x_subscrib[key] = fn;\n\n  if (!ignoreAutoRun) {\n    if (/^(__update)/.test(key as string)) {\n      fn(ele, key);\n      return;\n    }\n    // @ts-ignore\n    Promise.resolve(fn(ele, key)).then((value) => {\n      setAttr(ele, key, value);\n    });\n  }\n}\n\n// eslint-disable-next-line\nconst nextElements = new Set<Element & { __x_subscrib: Record<string, any> }>();\n\nlet nowId = \"\";\nconst updateNextElements = (id: string) => {\n  if (nowId !== id) {\n    return;\n  }\n  nextElements.forEach((e) => {\n    if (nowId !== id) {\n      return;\n    }\n    requestAnimationFrame(() => {\n      if (nowId !== id) {\n        return;\n      }\n      if (e.__x_subscrib) {\n        const keys = Object.keys(e.__x_subscrib);\n        keys.forEach((k) => {\n          if (nowId !== id) {\n            return;\n          }\n          const fn = e.__x_subscrib[k];\n          if (/^(__update)/.test(k as string)) {\n            fn(e, k);\n            return;\n          }\n          Promise.resolve(fn(e, k)).then((value) => {\n            setAttr(e, k, value);\n          });\n        });\n      }\n    });\n    nextElements.delete(e);\n  });\n};\n\n// eslint-disable-next-line\nfunction updateOne(ele: any) {\n  if ((ele as Element).hasAttribute(\"data-x-subscrib\")) {\n    nextElements.add(ele);\n  }\n  const eles = (ele as Element).querySelectorAll(\"[data-x-subscrib]\");\n  // @ts-ignore\n  eles.forEach((e: any) => {\n    nextElements.add(e);\n  });\n}\n\nconst filterEvents = new BootMap<any, number>();\n// eslint-disable-next-line\nlet fullUpdateEvents: any;\n\n// \u5168\u91CF\u66F4\u65B0, \u6240\u6709\u8BA2\u9605\u7684\u5C5E\u6027, \u53EF\u4EE5\u9009\u62E9\u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20, \u5176\u4ED6\u5168\u91CF\u5143\u7D20\u4F1A\u5EF6\u8FDF\u66F4\u65B0\nexport function toUpdate(\n  // \u4F18\u5148\u66F4\u65B0\u7684\u5143\u7D20\n  priority:\n    | (Element | Node | string | null)\n    | (Node | Element)[] = document.body,\n  options: {\n    ignoreSupplement?: boolean;\n  } = {}\n) {\n  if (priority !== null) {\n    let id = Math.random().toString();\n    nowId = id;\n    const lastRaf = filterEvents.get(priority) || 0;\n    if (lastRaf) {\n      cancelAnimationFrame(lastRaf);\n    }\n    const nextRef = requestAnimationFrame(() => {\n      if (typeof priority === \"string\") {\n        document.body.querySelectorAll(priority).forEach(updateOne);\n      } else if (Array.isArray(priority)) {\n        priority.forEach(updateOne);\n      } else {\n        updateOne(priority);\n      }\n      updateNextElements(id);\n      filterEvents.delete(priority);\n    });\n    filterEvents.set(priority, nextRef);\n  }\n  if (!options.ignoreSupplement && priority !== document.body) {\n    if (fullUpdateEvents) {\n      clearTimeout(fullUpdateEvents);\n      fullUpdateEvents = null;\n    }\n    fullUpdateEvents = setTimeout(() => {\n      updateOne(document.body);\n      updateNextElements(nowId);\n    }, 250);\n  }\n}\n", "import { setAttr } from \"./update\";\nimport { TreeParams, EleOrTag } from \"./types\";\nimport { bindSubscrib } from \"./update\";\n\n// eslint-disable-next-line\nexport function tagToElement(tag: any): any {\n  // eslint-disable-next-line\n  let ele: any;\n  if (typeof tag === \"string\") {\n    ele = document.createElement(tag);\n  } else {\n    ele = tag;\n  }\n  return ele;\n}\n\nexport function Ele<T>(tag: EleOrTag<T>, params?: TreeParams<T>) {\n  const ele = tagToElement(tag);\n  if (params) {\n    const keys = Object.keys(params) as (keyof typeof ele)[];\n    keys.forEach((k) => {\n      // @ts-ignore\n      const v = params[k];\n      // update props on assignxUpdate\n      if (\n        typeof v === \"function\" &&\n        // @ts-ignore\n        ele.setAttribute &&\n        !/^on/.test(k as string)\n      ) {\n        bindSubscrib(ele, k, v);\n        return;\n      }\n\n      // @ts-ignore\n      setAttr(ele, k, v);\n    });\n  }\n  return ele;\n}\n", "import { Ele } from \"./ele\";\nimport { EleOrTag, TreeParams } from \"./types\";\nimport { bindSubscrib } from \"./update\";\n\nexport function For<T>(\n  tag: EleOrTag<T>,\n  params: Omit<TreeParams<T>, \"each\" | \"render\"> & {\n    each: number | (() => number);\n    render: (index: number, getLength: () => number) => Node;\n  }\n): Node {\n  const { each, render, ...rest } = params;\n  // eslint-disable-next-line\n  const out = Ele(tag, rest as any);\n\n  if (typeof each === \"function\") {\n    bindSubscrib(\n      out,\n      \"__update_for\",\n      (\n        ele: Element & {\n          __lastForRender: boolean;\n        }\n      ) => {\n        const rendered = !!ele.__lastForRender;\n        ele.__lastForRender = true;\n        const nowL = each();\n\n        if (!rendered) {\n          const eles = [];\n          for (let i = 0; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n          return;\n        }\n        const l = ele.childNodes.length;\n        if (nowL > l) {\n          const eles = [];\n          for (let i = l; i < nowL; i++) {\n            eles.push(render(i, each));\n          }\n          ele.append(...eles);\n        } else {\n          for (let i = nowL; i < l; i++) {\n            const e = ele.childNodes.item(i);\n            if (e) {\n              e.remove();\n            }\n          }\n        }\n      }\n    );\n  } else {\n    const eles = [];\n    for (let i = 0; i < each; i++) {\n      eles.push(render(i, () => each));\n    }\n    out.append(...eles);\n  }\n\n  return out;\n}\n", "import { bindSubscrib } from \"./update\";\n\nexport function createEmpty() {\n  const span = document.createElement(\"span\");\n  span.style.all = \"none\";\n  return span;\n}\n\nexport function Show(\n  when: boolean | (() => boolean | Promise<boolean>),\n  render: () => Node\n): Node {\n  const base = createEmpty();\n  if (typeof when === \"function\") {\n    const createShowBind = (bindEle: Node) => {\n      bindSubscrib(\n        bindEle,\n        \"__update_show\",\n        (ele: Element & { __lastShow?: boolean }) => {\n          Promise.resolve(when()).then((v) => {\n            if (v === ele.__lastShow) {\n              return;\n            }\n            const nextEle = v ? render() : createEmpty();\n            createShowBind(nextEle);\n            ele.replaceWith(nextEle);\n            ele.__lastShow = v;\n          });\n        },\n        true\n      );\n    };\n    createShowBind(base);\n  }\n  return base;\n}\n", "import { For, Show, Ele, toUpdate } from \"../lib\";\n\nconst css = Ele(\"style\", {\n  textContent: `\n.contains {\n\tbackground: #f3f3f3;\n\tfont-size:40px;\n}\n`,\n});\ndocument.head.append(css);\n\nconst state: Record<string, string> = {\n  value0: \"200\",\n};\n\nconst app = Ele(\"div\", {\n  className: \"contains\",\n  style: {\n    cssText: \"width:100%; height:100%;\",\n  },\n  append: [\n    \"Hello\",\n    Ele(\"span\", {\n      innerText: \"world\",\n      style: {\n        cssText: \"color:red;\",\n      },\n      onclick: () => {\n        alert(\"hello\");\n      },\n    }),\n    Show(\n      () => Date.now() % 3 !== 0,\n      () => {\n        return Ele(\"span\", { textContent: \"show temp\" });\n      }\n    ),\n    For(\"div\", {\n      each: () => {\n        const v = Number(state[\"value0\"]);\n        return v > 15000 ? 15000 : v;\n      },\n      render: (i, len) => {\n        const area = () => i % (len() / 5);\n        return Ele(\"input\", {\n          value: () => state[\"value\" + area()],\n          dog: \"aaa\",\n          oninput: (e) => {\n            const value = (e.currentTarget as HTMLInputElement).value;\n            state[\"value\" + i] = value;\n            toUpdate();\n          },\n        });\n      },\n    }),\n  ],\n});\n\ndocument.body.append(app);\n"],
  "mappings": "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",
  "names": []
}
